package hw03frequencyanalysis

import (
	"testing"

	"github.com/stretchr/testify/require"
)

// Change to true if needed.
var taskWithAsteriskIsCompleted = true

var text = `Как видите, он  спускается  по  лестнице  вслед  за  своим
	другом   Кристофером   Робином,   головой   вниз,  пересчитывая
	ступеньки собственным затылком:  бум-бум-бум.  Другого  способа
	сходить  с  лестницы  он  пока  не  знает.  Иногда ему, правда,
		кажется, что можно бы найти какой-то другой способ, если бы  он
	только   мог   на  минутку  перестать  бумкать  и  как  следует
	сосредоточиться. Но увы - сосредоточиться-то ему и некогда.
		Как бы то ни было, вот он уже спустился  и  готов  с  вами
	познакомиться.
	- Винни-Пух. Очень приятно!
		Вас,  вероятно,  удивляет, почему его так странно зовут, а
	если вы знаете английский, то вы удивитесь еще больше.
		Это необыкновенное имя подарил ему Кристофер  Робин.  Надо
	вам  сказать,  что  когда-то Кристофер Робин был знаком с одним
	лебедем на пруду, которого он звал Пухом. Для лебедя  это  было
	очень   подходящее  имя,  потому  что  если  ты  зовешь  лебедя
	громко: "Пу-ух! Пу-ух!"- а он  не  откликается,  то  ты  всегда
	можешь  сделать вид, что ты просто понарошку стрелял; а если ты
	звал его тихо, то все подумают, что ты  просто  подул  себе  на
	нос.  Лебедь  потом  куда-то делся, а имя осталось, и Кристофер
	Робин решил отдать его своему медвежонку, чтобы оно не  пропало
	зря.
		А  Винни - так звали самую лучшую, самую добрую медведицу
	в  зоологическом  саду,  которую  очень-очень  любил  Кристофер
	Робин.  А  она  очень-очень  любила  его. Ее ли назвали Винни в
	честь Пуха, или Пуха назвали в ее честь - теперь уже никто  не
	знает,  даже папа Кристофера Робина. Когда-то он знал, а теперь
	забыл.
		Словом, теперь мишку зовут Винни-Пух, и вы знаете почему.
		Иногда Винни-Пух любит вечерком во что-нибудь поиграть,  а
	иногда,  особенно  когда  папа  дома,  он больше любит тихонько
	посидеть у огня и послушать какую-нибудь интересную сказку.
		В этот вечер...`

func TestTop10(t *testing.T) {
	t.Run("no words in empty string", func(t *testing.T) {
		require.Len(t, Top10(""), 0)
	})

	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"а",         // 8
				"он",        // 8
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"в",         // 4
				"его",       // 4
				"если",      // 4
				"кристофер", // 4
				"не",        // 4
			}
			require.Equal(t, expected, Top10(text))
		} else {
			expected := []string{
				"он",        // 8
				"а",         // 6
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"-",         // 4
				"Кристофер", // 4
				"если",      // 4
				"не",        // 4
				"то",        // 4
			}
			require.Equal(t, expected, Top10(text))
		}
	})
}

var catGavFairyTail = `Когда соседский кот узнал, что рыжего котёнка зовут Гав, 
он почесал спинку о трубу соседского дома и сказал:
— Я бы не советовал котёнку с таким именем спускаться во двор. 
Во дворе котёнка с таким именем ждут одни неприятности.
Котёнок Гав услышал и подумал: «Что это за неприятности и зачем они меня ждут?». 
Гав сейчас же спустился во двор и внимательно осмотрел все закоулки — нигде никаких неприятностей не было.
В это время во двор вышла большая собака. Она увидела Гава и подумала: «Вот идёт рыжий котёнок. 
Что-то раньше я его не замечала».
— Эй ты, рыжий, — позвала собака, — как тебя зовут?
— Гав! — сказал котёнок.
— Чтоооо?! — удивилась собака.
— Гав!
— Ах ты ещё дразнишься, — закричала собака и погналась за котёнком так быстро, что чуть-чуть его не поймала.
Когда котёнок Гав примчался на свой чердак, соседский кот спросил его:
— Ну, убедился, что во дворе тебя ждут неприятности?
— Нет, — сказал котёнок, — не убедился. Я их искал, искал и уже почти совсем нашёл, но меня собака прогнала.`

func TestTop10WithTableCases(t *testing.T) {
	cases := []struct {
		name     string
		input    string
		expected []string
	}{
		{
			name:     "test 1",
			input:    "hello,,, by-by-by, - - - !!!hello!!! ,,by-by-by!!!",
			expected: []string{"by-by-by", "hello"},
		},
		{
			name:     "test 2",
			input:    "!!'''привет,,, ---привет-hello---, - - - !!??привет-hello!--!! ,,привет!bye-bye-bye!!",
			expected: []string{"привет", "привет-hello"},
		},
		{
			name:     "should it work like this???",
			input:    "''';;приВЕтики-Привет;;';аВотЭтоНеСлово?;;аМожетЗто?;';",
			expected: []string{"приветики-привет"},
		},
		{
			name:     "test 3",
			input:    "1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13",
			expected: []string{"1", "10", "11", "12", "13", "2", "3", "4", "5", "6"},
		},
		{
			name:     "test 4",
			input:    "русский english русский english-русский английский russian",
			expected: []string{"русский", "english", "english-русский", "russian", "английский"},
		},
		{
			name:  "test fairy tail Gav cat",
			input: catGavFairyTail,
			expected: []string{
				"и",       // 7
				"гав",     // 6
				"во",      // 5
				"котёнок", // 5
				"не",      // 5
				"собака",  // 5
				"что",     // 5
				"двор",    // 3
				"его",     // 3
				"ждут",    // 3
			},
		},
	}

	for _, tc := range cases {
		t.Run(tc.name, func(t *testing.T) {
			actual := Top10(tc.input)
			require.Equal(t, tc.expected, actual)
		})
	}
}
